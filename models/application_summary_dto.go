// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApplicationSummaryDto application summary dto
//
// swagger:model ApplicationSummaryDto
type ApplicationSummaryDto struct {

	// alert
	Alert bool `json:"alert,omitempty"`

	// cluster Id
	ClusterID int32 `json:"clusterId,omitempty"`

	// command
	Command string `json:"command,omitempty"`

	// created t s
	// Format: date-time
	CreatedTS strfmt.DateTime `json:"createdTS,omitempty"`

	// current image
	CurrentImage *ImageDto `json:"currentImage,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is runned
	IsRunned bool `json:"isRunned,omitempty"`

	// limit CPU
	LimitCPU float32 `json:"limitCPU,omitempty"`

	// limit RAM
	LimitRAM float32 `json:"limitRAM,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// need restart
	NeedRestart bool `json:"needRestart,omitempty"`

	// owner
	Owner *UserSummaryDto `json:"owner,omitempty"`

	// replicas
	Replicas int32 `json:"replicas,omitempty"`

	// restrict restart
	RestrictRestart bool `json:"restrictRestart,omitempty"`
}

// Validate validates this application summary dto
func (m *ApplicationSummaryDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedTS(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCurrentImage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwner(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationSummaryDto) validateCreatedTS(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedTS) { // not required
		return nil
	}

	if err := validate.FormatOf("createdTS", "body", "date-time", m.CreatedTS.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ApplicationSummaryDto) validateCurrentImage(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentImage) { // not required
		return nil
	}

	if m.CurrentImage != nil {
		if err := m.CurrentImage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("currentImage")
			}
			return err
		}
	}

	return nil
}

func (m *ApplicationSummaryDto) validateOwner(formats strfmt.Registry) error {

	if swag.IsZero(m.Owner) { // not required
		return nil
	}

	if m.Owner != nil {
		if err := m.Owner.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("owner")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationSummaryDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationSummaryDto) UnmarshalBinary(b []byte) error {
	var res ApplicationSummaryDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
