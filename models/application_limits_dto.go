// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApplicationLimitsDto application limits dto
//
// swagger:model ApplicationLimitsDto
type ApplicationLimitsDto struct {

	// limut CPU
	// Maximum: 3.40282346638529e+38
	// Minimum: 0.00499999988824129
	LimutCPU float32 `json:"limutCPU,omitempty"`

	// limut RAM
	// Maximum: 3.40282346638529e+38
	// Minimum: 0.00100000004749745
	LimutRAM float32 `json:"limutRAM,omitempty"`

	// replicas
	// Maximum: 2.147483647e+09
	// Minimum: 0
	Replicas *int32 `json:"replicas,omitempty"`
}

// Validate validates this application limits dto
func (m *ApplicationLimitsDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLimutCPU(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLimutRAM(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReplicas(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationLimitsDto) validateLimutCPU(formats strfmt.Registry) error {

	if swag.IsZero(m.LimutCPU) { // not required
		return nil
	}

	if err := validate.Minimum("limutCPU", "body", float64(m.LimutCPU), 0.00499999988824129, false); err != nil {
		return err
	}

	if err := validate.Maximum("limutCPU", "body", float64(m.LimutCPU), 3.40282346638529e+38, false); err != nil {
		return err
	}

	return nil
}

func (m *ApplicationLimitsDto) validateLimutRAM(formats strfmt.Registry) error {

	if swag.IsZero(m.LimutRAM) { // not required
		return nil
	}

	if err := validate.Minimum("limutRAM", "body", float64(m.LimutRAM), 0.00100000004749745, false); err != nil {
		return err
	}

	if err := validate.Maximum("limutRAM", "body", float64(m.LimutRAM), 3.40282346638529e+38, false); err != nil {
		return err
	}

	return nil
}

func (m *ApplicationLimitsDto) validateReplicas(formats strfmt.Registry) error {

	if swag.IsZero(m.Replicas) { // not required
		return nil
	}

	if err := validate.MinimumInt("replicas", "body", int64(*m.Replicas), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("replicas", "body", int64(*m.Replicas), 2.147483647e+09, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationLimitsDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationLimitsDto) UnmarshalBinary(b []byte) error {
	var res ApplicationLimitsDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
