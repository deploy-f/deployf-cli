// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReadyApplicationParameterDto ready application parameter dto
//
// swagger:model ReadyApplicationParameterDto
type ReadyApplicationParameterDto struct {

	// file path
	FilePath string `json:"filePath,omitempty"`

	// label
	Label string `json:"label,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// target
	// Enum: [0 1 2]
	Target int32 `json:"target,omitempty"`

	// tooltip
	Tooltip string `json:"tooltip,omitempty"`

	// type
	// Enum: [0 1]
	Type int32 `json:"type,omitempty"`

	// validation regex
	ValidationRegex string `json:"validationRegex,omitempty"`

	// value
	Value string `json:"value,omitempty"`

	// variants
	Variants []string `json:"variants"`
}

// Validate validates this ready application parameter dto
func (m *ReadyApplicationParameterDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var readyApplicationParameterDtoTypeTargetPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		readyApplicationParameterDtoTypeTargetPropEnum = append(readyApplicationParameterDtoTypeTargetPropEnum, v)
	}
}

// prop value enum
func (m *ReadyApplicationParameterDto) validateTargetEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, readyApplicationParameterDtoTypeTargetPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReadyApplicationParameterDto) validateTarget(formats strfmt.Registry) error {

	if swag.IsZero(m.Target) { // not required
		return nil
	}

	// value enum
	if err := m.validateTargetEnum("target", "body", m.Target); err != nil {
		return err
	}

	return nil
}

var readyApplicationParameterDtoTypeTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		readyApplicationParameterDtoTypeTypePropEnum = append(readyApplicationParameterDtoTypeTypePropEnum, v)
	}
}

// prop value enum
func (m *ReadyApplicationParameterDto) validateTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, readyApplicationParameterDtoTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReadyApplicationParameterDto) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReadyApplicationParameterDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReadyApplicationParameterDto) UnmarshalBinary(b []byte) error {
	var res ReadyApplicationParameterDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
