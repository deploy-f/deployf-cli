// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FileDto file dto
//
// swagger:model FileDto
type FileDto struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// upload time
	// Format: date-time
	UploadTime strfmt.DateTime `json:"uploadTime,omitempty"`

	// uploaded user
	UploadedUser *UserSummaryDto `json:"uploadedUser,omitempty"`
}

// Validate validates this file dto
func (m *FileDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUploadTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUploadedUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FileDto) validateUploadTime(formats strfmt.Registry) error {

	if swag.IsZero(m.UploadTime) { // not required
		return nil
	}

	if err := validate.FormatOf("uploadTime", "body", "date-time", m.UploadTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *FileDto) validateUploadedUser(formats strfmt.Registry) error {

	if swag.IsZero(m.UploadedUser) { // not required
		return nil
	}

	if m.UploadedUser != nil {
		if err := m.UploadedUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("uploadedUser")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FileDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FileDto) UnmarshalBinary(b []byte) error {
	var res FileDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
