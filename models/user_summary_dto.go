// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserSummaryDto user summary dto
//
// swagger:model UserSummaryDto
type UserSummaryDto struct {

	// email
	Email string `json:"email,omitempty"`

	// id
	// Required: true
	ID *string `json:"id"`

	// registration time
	// Format: date-time
	RegistrationTime strfmt.DateTime `json:"registrationTime,omitempty"`

	// roles
	// Enum: [0 1 2 4 8 16 32 64 128 256 512 1024 2.147483647e+09]
	Roles int32 `json:"roles,omitempty"`

	// user Id
	UserID int32 `json:"userId,omitempty"`
}

// Validate validates this user summary dto
func (m *UserSummaryDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegistrationTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserSummaryDto) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *UserSummaryDto) validateRegistrationTime(formats strfmt.Registry) error {

	if swag.IsZero(m.RegistrationTime) { // not required
		return nil
	}

	if err := validate.FormatOf("registrationTime", "body", "date-time", m.RegistrationTime.String(), formats); err != nil {
		return err
	}

	return nil
}

var userSummaryDtoTypeRolesPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,4,8,16,32,64,128,256,512,1024,2147483647]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userSummaryDtoTypeRolesPropEnum = append(userSummaryDtoTypeRolesPropEnum, v)
	}
}

// prop value enum
func (m *UserSummaryDto) validateRolesEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, userSummaryDtoTypeRolesPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UserSummaryDto) validateRoles(formats strfmt.Registry) error {

	if swag.IsZero(m.Roles) { // not required
		return nil
	}

	// value enum
	if err := m.validateRolesEnum("roles", "body", m.Roles); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserSummaryDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserSummaryDto) UnmarshalBinary(b []byte) error {
	var res UserSummaryDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
