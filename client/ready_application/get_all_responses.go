// Code generated by go-swagger; DO NOT EDIT.

package ready_application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// GetAllReader is a Reader for the GetAll structure.
type GetAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllOK creates a GetAllOK with default headers values
func NewGetAllOK() *GetAllOK {
	return &GetAllOK{}
}

/*GetAllOK handles this case with default header values.

Success
*/
type GetAllOK struct {
	Payload *models.PageDtoReadyApplicationSummaryDto
}

func (o *GetAllOK) Error() string {
	return fmt.Sprintf("[GET /api/ready-applications][%d] getAllOK  %+v", 200, o.Payload)
}

func (o *GetAllOK) GetPayload() *models.PageDtoReadyApplicationSummaryDto {
	return o.Payload
}

func (o *GetAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageDtoReadyApplicationSummaryDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUnauthorized creates a GetAllUnauthorized with default headers values
func NewGetAllUnauthorized() *GetAllUnauthorized {
	return &GetAllUnauthorized{}
}

/*GetAllUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllUnauthorized struct {
}

func (o *GetAllUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/ready-applications][%d] getAllUnauthorized ", 401)
}

func (o *GetAllUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllForbidden creates a GetAllForbidden with default headers values
func NewGetAllForbidden() *GetAllForbidden {
	return &GetAllForbidden{}
}

/*GetAllForbidden handles this case with default header values.

Forbidden
*/
type GetAllForbidden struct {
}

func (o *GetAllForbidden) Error() string {
	return fmt.Sprintf("[GET /api/ready-applications][%d] getAllForbidden ", 403)
}

func (o *GetAllForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
