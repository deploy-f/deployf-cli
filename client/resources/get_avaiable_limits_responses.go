// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// GetAvaiableLimitsReader is a Reader for the GetAvaiableLimits structure.
type GetAvaiableLimitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvaiableLimitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvaiableLimitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAvaiableLimitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAvaiableLimitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAvaiableLimitsOK creates a GetAvaiableLimitsOK with default headers values
func NewGetAvaiableLimitsOK() *GetAvaiableLimitsOK {
	return &GetAvaiableLimitsOK{}
}

/*GetAvaiableLimitsOK handles this case with default header values.

Success
*/
type GetAvaiableLimitsOK struct {
	Payload *models.UserAvailableLimitsDto
}

func (o *GetAvaiableLimitsOK) Error() string {
	return fmt.Sprintf("[GET /api/resources/available-limits/{user}][%d] getAvaiableLimitsOK  %+v", 200, o.Payload)
}

func (o *GetAvaiableLimitsOK) GetPayload() *models.UserAvailableLimitsDto {
	return o.Payload
}

func (o *GetAvaiableLimitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserAvailableLimitsDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvaiableLimitsUnauthorized creates a GetAvaiableLimitsUnauthorized with default headers values
func NewGetAvaiableLimitsUnauthorized() *GetAvaiableLimitsUnauthorized {
	return &GetAvaiableLimitsUnauthorized{}
}

/*GetAvaiableLimitsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAvaiableLimitsUnauthorized struct {
}

func (o *GetAvaiableLimitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/resources/available-limits/{user}][%d] getAvaiableLimitsUnauthorized ", 401)
}

func (o *GetAvaiableLimitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAvaiableLimitsForbidden creates a GetAvaiableLimitsForbidden with default headers values
func NewGetAvaiableLimitsForbidden() *GetAvaiableLimitsForbidden {
	return &GetAvaiableLimitsForbidden{}
}

/*GetAvaiableLimitsForbidden handles this case with default header values.

Forbidden
*/
type GetAvaiableLimitsForbidden struct {
}

func (o *GetAvaiableLimitsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/resources/available-limits/{user}][%d] getAvaiableLimitsForbidden ", 403)
}

func (o *GetAvaiableLimitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
