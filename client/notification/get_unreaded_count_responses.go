// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetUnreadedCountReader is a Reader for the GetUnreadedCount structure.
type GetUnreadedCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUnreadedCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUnreadedCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUnreadedCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUnreadedCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUnreadedCountOK creates a GetUnreadedCountOK with default headers values
func NewGetUnreadedCountOK() *GetUnreadedCountOK {
	return &GetUnreadedCountOK{}
}

/*GetUnreadedCountOK handles this case with default header values.

Success
*/
type GetUnreadedCountOK struct {
	Payload int32
}

func (o *GetUnreadedCountOK) Error() string {
	return fmt.Sprintf("[GET /api/notification/unreaded/count][%d] getUnreadedCountOK  %+v", 200, o.Payload)
}

func (o *GetUnreadedCountOK) GetPayload() int32 {
	return o.Payload
}

func (o *GetUnreadedCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnreadedCountUnauthorized creates a GetUnreadedCountUnauthorized with default headers values
func NewGetUnreadedCountUnauthorized() *GetUnreadedCountUnauthorized {
	return &GetUnreadedCountUnauthorized{}
}

/*GetUnreadedCountUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUnreadedCountUnauthorized struct {
}

func (o *GetUnreadedCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/notification/unreaded/count][%d] getUnreadedCountUnauthorized ", 401)
}

func (o *GetUnreadedCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUnreadedCountForbidden creates a GetUnreadedCountForbidden with default headers values
func NewGetUnreadedCountForbidden() *GetUnreadedCountForbidden {
	return &GetUnreadedCountForbidden{}
}

/*GetUnreadedCountForbidden handles this case with default header values.

Forbidden
*/
type GetUnreadedCountForbidden struct {
}

func (o *GetUnreadedCountForbidden) Error() string {
	return fmt.Sprintf("[GET /api/notification/unreaded/count][%d] getUnreadedCountForbidden ", 403)
}

func (o *GetUnreadedCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
