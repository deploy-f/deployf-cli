// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StartReader is a Reader for the Start structure.
type StartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStartUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStartForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStartOK creates a StartOK with default headers values
func NewStartOK() *StartOK {
	return &StartOK{}
}

/*StartOK handles this case with default header values.

Success
*/
type StartOK struct {
}

func (o *StartOK) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/start][%d] startOK ", 200)
}

func (o *StartOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartUnauthorized creates a StartUnauthorized with default headers values
func NewStartUnauthorized() *StartUnauthorized {
	return &StartUnauthorized{}
}

/*StartUnauthorized handles this case with default header values.

Unauthorized
*/
type StartUnauthorized struct {
}

func (o *StartUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/start][%d] startUnauthorized ", 401)
}

func (o *StartUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartForbidden creates a StartForbidden with default headers values
func NewStartForbidden() *StartForbidden {
	return &StartForbidden{}
}

/*StartForbidden handles this case with default header values.

Forbidden
*/
type StartForbidden struct {
}

func (o *StartForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/start][%d] startForbidden ", 403)
}

func (o *StartForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
