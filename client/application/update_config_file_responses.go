// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// UpdateConfigFileReader is a Reader for the UpdateConfigFile structure.
type UpdateConfigFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateConfigFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateConfigFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateConfigFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateConfigFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateConfigFileOK creates a UpdateConfigFileOK with default headers values
func NewUpdateConfigFileOK() *UpdateConfigFileOK {
	return &UpdateConfigFileOK{}
}

/*UpdateConfigFileOK handles this case with default header values.

Success
*/
type UpdateConfigFileOK struct {
	Payload *models.ApplicationConfigFileDto
}

func (o *UpdateConfigFileOK) Error() string {
	return fmt.Sprintf("[PATCH /api/application/{id}/config-files][%d] updateConfigFileOK  %+v", 200, o.Payload)
}

func (o *UpdateConfigFileOK) GetPayload() *models.ApplicationConfigFileDto {
	return o.Payload
}

func (o *UpdateConfigFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationConfigFileDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigFileUnauthorized creates a UpdateConfigFileUnauthorized with default headers values
func NewUpdateConfigFileUnauthorized() *UpdateConfigFileUnauthorized {
	return &UpdateConfigFileUnauthorized{}
}

/*UpdateConfigFileUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateConfigFileUnauthorized struct {
}

func (o *UpdateConfigFileUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/application/{id}/config-files][%d] updateConfigFileUnauthorized ", 401)
}

func (o *UpdateConfigFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateConfigFileForbidden creates a UpdateConfigFileForbidden with default headers values
func NewUpdateConfigFileForbidden() *UpdateConfigFileForbidden {
	return &UpdateConfigFileForbidden{}
}

/*UpdateConfigFileForbidden handles this case with default header values.

Forbidden
*/
type UpdateConfigFileForbidden struct {
}

func (o *UpdateConfigFileForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/application/{id}/config-files][%d] updateConfigFileForbidden ", 403)
}

func (o *UpdateConfigFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
