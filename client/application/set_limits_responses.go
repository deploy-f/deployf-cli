// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetLimitsReader is a Reader for the SetLimits structure.
type SetLimitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetLimitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetLimitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetLimitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetLimitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetLimitsOK creates a SetLimitsOK with default headers values
func NewSetLimitsOK() *SetLimitsOK {
	return &SetLimitsOK{}
}

/*SetLimitsOK handles this case with default header values.

Success
*/
type SetLimitsOK struct {
}

func (o *SetLimitsOK) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/limits][%d] setLimitsOK ", 200)
}

func (o *SetLimitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetLimitsUnauthorized creates a SetLimitsUnauthorized with default headers values
func NewSetLimitsUnauthorized() *SetLimitsUnauthorized {
	return &SetLimitsUnauthorized{}
}

/*SetLimitsUnauthorized handles this case with default header values.

Unauthorized
*/
type SetLimitsUnauthorized struct {
}

func (o *SetLimitsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/limits][%d] setLimitsUnauthorized ", 401)
}

func (o *SetLimitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetLimitsForbidden creates a SetLimitsForbidden with default headers values
func NewSetLimitsForbidden() *SetLimitsForbidden {
	return &SetLimitsForbidden{}
}

/*SetLimitsForbidden handles this case with default header values.

Forbidden
*/
type SetLimitsForbidden struct {
}

func (o *SetLimitsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/limits][%d] setLimitsForbidden ", 403)
}

func (o *SetLimitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
