// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetPortsReader is a Reader for the SetPorts structure.
type SetPortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetPortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetPortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetPortsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetPortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetPortsOK creates a SetPortsOK with default headers values
func NewSetPortsOK() *SetPortsOK {
	return &SetPortsOK{}
}

/*SetPortsOK handles this case with default header values.

Success
*/
type SetPortsOK struct {
	Payload bool
}

func (o *SetPortsOK) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/ports][%d] setPortsOK  %+v", 200, o.Payload)
}

func (o *SetPortsOK) GetPayload() bool {
	return o.Payload
}

func (o *SetPortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPortsUnauthorized creates a SetPortsUnauthorized with default headers values
func NewSetPortsUnauthorized() *SetPortsUnauthorized {
	return &SetPortsUnauthorized{}
}

/*SetPortsUnauthorized handles this case with default header values.

Unauthorized
*/
type SetPortsUnauthorized struct {
}

func (o *SetPortsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/ports][%d] setPortsUnauthorized ", 401)
}

func (o *SetPortsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetPortsForbidden creates a SetPortsForbidden with default headers values
func NewSetPortsForbidden() *SetPortsForbidden {
	return &SetPortsForbidden{}
}

/*SetPortsForbidden handles this case with default header values.

Forbidden
*/
type SetPortsForbidden struct {
}

func (o *SetPortsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/application/{id}/ports][%d] setPortsForbidden ", 403)
}

func (o *SetPortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
