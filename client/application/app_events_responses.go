// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// AppEventsReader is a Reader for the AppEvents structure.
type AppEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAppEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAppEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAppEventsOK creates a AppEventsOK with default headers values
func NewAppEventsOK() *AppEventsOK {
	return &AppEventsOK{}
}

/*AppEventsOK handles this case with default header values.

Success
*/
type AppEventsOK struct {
	Payload *models.PageDtoApplicationEventDto
}

func (o *AppEventsOK) Error() string {
	return fmt.Sprintf("[GET /api/application/{id}/events][%d] appEventsOK  %+v", 200, o.Payload)
}

func (o *AppEventsOK) GetPayload() *models.PageDtoApplicationEventDto {
	return o.Payload
}

func (o *AppEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageDtoApplicationEventDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppEventsUnauthorized creates a AppEventsUnauthorized with default headers values
func NewAppEventsUnauthorized() *AppEventsUnauthorized {
	return &AppEventsUnauthorized{}
}

/*AppEventsUnauthorized handles this case with default header values.

Unauthorized
*/
type AppEventsUnauthorized struct {
}

func (o *AppEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/application/{id}/events][%d] appEventsUnauthorized ", 401)
}

func (o *AppEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAppEventsForbidden creates a AppEventsForbidden with default headers values
func NewAppEventsForbidden() *AppEventsForbidden {
	return &AppEventsForbidden{}
}

/*AppEventsForbidden handles this case with default header values.

Forbidden
*/
type AppEventsForbidden struct {
}

func (o *AppEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/application/{id}/events][%d] appEventsForbidden ", 403)
}

func (o *AppEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
