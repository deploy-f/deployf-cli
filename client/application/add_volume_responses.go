// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// AddVolumeReader is a Reader for the AddVolume structure.
type AddVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddVolumeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddVolumeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddVolumeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddVolumeOK creates a AddVolumeOK with default headers values
func NewAddVolumeOK() *AddVolumeOK {
	return &AddVolumeOK{}
}

/*AddVolumeOK handles this case with default header values.

Success
*/
type AddVolumeOK struct {
	Payload *models.ApplicationVolumeDto
}

func (o *AddVolumeOK) Error() string {
	return fmt.Sprintf("[POST /api/application/{id}/volume][%d] addVolumeOK  %+v", 200, o.Payload)
}

func (o *AddVolumeOK) GetPayload() *models.ApplicationVolumeDto {
	return o.Payload
}

func (o *AddVolumeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationVolumeDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVolumeUnauthorized creates a AddVolumeUnauthorized with default headers values
func NewAddVolumeUnauthorized() *AddVolumeUnauthorized {
	return &AddVolumeUnauthorized{}
}

/*AddVolumeUnauthorized handles this case with default header values.

Unauthorized
*/
type AddVolumeUnauthorized struct {
}

func (o *AddVolumeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/application/{id}/volume][%d] addVolumeUnauthorized ", 401)
}

func (o *AddVolumeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVolumeForbidden creates a AddVolumeForbidden with default headers values
func NewAddVolumeForbidden() *AddVolumeForbidden {
	return &AddVolumeForbidden{}
}

/*AddVolumeForbidden handles this case with default header values.

Forbidden
*/
type AddVolumeForbidden struct {
}

func (o *AddVolumeForbidden) Error() string {
	return fmt.Sprintf("[POST /api/application/{id}/volume][%d] addVolumeForbidden ", 403)
}

func (o *AddVolumeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
