// Code generated by go-swagger; DO NOT EDIT.

package docker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// CheckRegistryReader is a Reader for the CheckRegistry structure.
type CheckRegistryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckRegistryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckRegistryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCheckRegistryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckRegistryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCheckRegistryOK creates a CheckRegistryOK with default headers values
func NewCheckRegistryOK() *CheckRegistryOK {
	return &CheckRegistryOK{}
}

/*CheckRegistryOK handles this case with default header values.

Success
*/
type CheckRegistryOK struct {
	Payload *models.DockerRegistryCheckResultDto
}

func (o *CheckRegistryOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/docker/registry/check][%d] checkRegistryOK  %+v", 200, o.Payload)
}

func (o *CheckRegistryOK) GetPayload() *models.DockerRegistryCheckResultDto {
	return o.Payload
}

func (o *CheckRegistryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DockerRegistryCheckResultDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckRegistryUnauthorized creates a CheckRegistryUnauthorized with default headers values
func NewCheckRegistryUnauthorized() *CheckRegistryUnauthorized {
	return &CheckRegistryUnauthorized{}
}

/*CheckRegistryUnauthorized handles this case with default header values.

Unauthorized
*/
type CheckRegistryUnauthorized struct {
}

func (o *CheckRegistryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/docker/registry/check][%d] checkRegistryUnauthorized ", 401)
}

func (o *CheckRegistryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCheckRegistryForbidden creates a CheckRegistryForbidden with default headers values
func NewCheckRegistryForbidden() *CheckRegistryForbidden {
	return &CheckRegistryForbidden{}
}

/*CheckRegistryForbidden handles this case with default header values.

Forbidden
*/
type CheckRegistryForbidden struct {
}

func (o *CheckRegistryForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/docker/registry/check][%d] checkRegistryForbidden ", 403)
}

func (o *CheckRegistryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
