// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// GetReader is a Reader for the Get structure.
type GetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOK creates a GetOK with default headers values
func NewGetOK() *GetOK {
	return &GetOK{}
}

/*GetOK handles this case with default header values.

Success
*/
type GetOK struct {
	Payload []*models.CustomDomainDto
}

func (o *GetOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{appId}][%d] getOK  %+v", 200, o.Payload)
}

func (o *GetOK) GetPayload() []*models.CustomDomainDto {
	return o.Payload
}

func (o *GetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnauthorized creates a GetUnauthorized with default headers values
func NewGetUnauthorized() *GetUnauthorized {
	return &GetUnauthorized{}
}

/*GetUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUnauthorized struct {
}

func (o *GetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{appId}][%d] getUnauthorized ", 401)
}

func (o *GetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetForbidden creates a GetForbidden with default headers values
func NewGetForbidden() *GetForbidden {
	return &GetForbidden{}
}

/*GetForbidden handles this case with default header values.

Forbidden
*/
type GetForbidden struct {
}

func (o *GetForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{appId}][%d] getForbidden ", 403)
}

func (o *GetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
