// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"cli/models"
)

// AddReader is a Reader for the Add structure.
type AddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddOK creates a AddOK with default headers values
func NewAddOK() *AddOK {
	return &AddOK{}
}

/*AddOK handles this case with default header values.

Success
*/
type AddOK struct {
	Payload *models.CustomDomainDto
}

func (o *AddOK) Error() string {
	return fmt.Sprintf("[POST /v1/domains/{appId}][%d] addOK  %+v", 200, o.Payload)
}

func (o *AddOK) GetPayload() *models.CustomDomainDto {
	return o.Payload
}

func (o *AddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomDomainDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUnauthorized creates a AddUnauthorized with default headers values
func NewAddUnauthorized() *AddUnauthorized {
	return &AddUnauthorized{}
}

/*AddUnauthorized handles this case with default header values.

Unauthorized
*/
type AddUnauthorized struct {
}

func (o *AddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/domains/{appId}][%d] addUnauthorized ", 401)
}

func (o *AddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddForbidden creates a AddForbidden with default headers values
func NewAddForbidden() *AddForbidden {
	return &AddForbidden{}
}

/*AddForbidden handles this case with default header values.

Forbidden
*/
type AddForbidden struct {
}

func (o *AddForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/domains/{appId}][%d] addForbidden ", 403)
}

func (o *AddForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
