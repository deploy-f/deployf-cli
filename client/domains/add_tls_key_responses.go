// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddTLSKeyReader is a Reader for the AddTLSKey structure.
type AddTLSKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTLSKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTLSKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddTLSKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTLSKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddTLSKeyOK creates a AddTLSKeyOK with default headers values
func NewAddTLSKeyOK() *AddTLSKeyOK {
	return &AddTLSKeyOK{}
}

/*AddTLSKeyOK handles this case with default header values.

Success
*/
type AddTLSKeyOK struct {
}

func (o *AddTLSKeyOK) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/private-key/file][%d] addTlsKeyOK ", 200)
}

func (o *AddTLSKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTLSKeyUnauthorized creates a AddTLSKeyUnauthorized with default headers values
func NewAddTLSKeyUnauthorized() *AddTLSKeyUnauthorized {
	return &AddTLSKeyUnauthorized{}
}

/*AddTLSKeyUnauthorized handles this case with default header values.

Unauthorized
*/
type AddTLSKeyUnauthorized struct {
}

func (o *AddTLSKeyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/private-key/file][%d] addTlsKeyUnauthorized ", 401)
}

func (o *AddTLSKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTLSKeyForbidden creates a AddTLSKeyForbidden with default headers values
func NewAddTLSKeyForbidden() *AddTLSKeyForbidden {
	return &AddTLSKeyForbidden{}
}

/*AddTLSKeyForbidden handles this case with default header values.

Forbidden
*/
type AddTLSKeyForbidden struct {
}

func (o *AddTLSKeyForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/private-key/file][%d] addTlsKeyForbidden ", 403)
}

func (o *AddTLSKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
